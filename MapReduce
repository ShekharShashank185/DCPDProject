import os
import re
import sys
import pprint


def getText(file):
# function fetches the text to be processed by map-reduce.
# removing the comma and periods as well as changing the case to lower case.
    text = open(file,'r').read().strip("\n").replace(","," ").replace("."," ").lower()
    return text

def mapper(text1):
#splitting the input string into a list
    text = text1.split()
    mapOut = []
    VowelRegx = re.compile(r'[aeiou]')
# regular expression to check for existence of Vowels.
    for word in text:
        a = VowelRegx.findall(word)
        if a != []:
            mapOut.append((word,len(a)))
    return mapOut

def reducer(ToReduce):
    reduced={}
    for word in ToReduce:
        if word[0] not in reduced:
            reduced[word[0]] = (word[1])
    return reduced

# the file to be processed should be in mentioned path below.In case of different directory location, change the Working directory path in variable path
  # file name or the file to be processed in working directory should be passed as the argument to the string
filename = str(sys.argv[1])
path = 'C:/Users/Shashank/Desktop/Mapred'
file = os.path.join(path,filename)
print('Processing file',file)
Text = getText(file)  # fetch the text to be processed by Map-reduce.
ToReduce = mapper(Text)
Reduced = reducer(ToReduce)
pprint.pprint(Reduced)
